# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:/Users/Austin/AppData/Local/Temp/codeCheck2GUINobQxO.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QMainWindow
import sys

global app
global MainWindow
global ui



class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1009, 412)
        self.CentralWidget = QtWidgets.QWidget(MainWindow)
        self.CentralWidget.setObjectName("CentralWidget")
        self.ProgramLabel = QtWidgets.QLabel(self.CentralWidget)
        self.ProgramLabel.setGeometry(QtCore.QRect(20, 10, 251, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.ProgramLabel.setFont(font)
        self.ProgramLabel.setObjectName("ProgramLabel")
        self.InputATextEdit = QtWidgets.QPlainTextEdit(self.CentralWidget)
        self.InputATextEdit.setGeometry(QtCore.QRect(20, 120, 321, 221))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.InputATextEdit.setFont(font)
        self.InputATextEdit.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.InputATextEdit.setObjectName("InputATextEdit")
        self.Line = QtWidgets.QFrame(self.CentralWidget)
        self.Line.setGeometry(QtCore.QRect(20, 50, 971, 20))
        self.Line.setFrameShadow(QtWidgets.QFrame.Raised)
        self.Line.setFrameShape(QtWidgets.QFrame.HLine)
        self.Line.setObjectName("Line")
        self.InputALabel = QtWidgets.QLabel(self.CentralWidget)
        self.InputALabel.setGeometry(QtCore.QRect(20, 80, 91, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.InputALabel.setFont(font)
        self.InputALabel.setObjectName("InputALabel")
        self.InputBTextEdit = QtWidgets.QPlainTextEdit(self.CentralWidget)
        self.InputBTextEdit.setGeometry(QtCore.QRect(370, 120, 321, 221))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.InputBTextEdit.setFont(font)
        self.InputBTextEdit.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.InputBTextEdit.setObjectName("InputBTextEdit")
        self.InputBLabel = QtWidgets.QLabel(self.CentralWidget)
        self.InputBLabel.setGeometry(QtCore.QRect(370, 80, 91, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.InputBLabel.setFont(font)
        self.InputBLabel.setObjectName("InputBLabel")
        self.AlgorithmGroupBox = QtWidgets.QGroupBox(self.CentralWidget)
        self.AlgorithmGroupBox.setGeometry(QtCore.QRect(710, 110, 281, 231))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.AlgorithmGroupBox.setFont(font)
        self.AlgorithmGroupBox.setObjectName("AlgorithmGroupBox")
        self.legacyAlgoRadioButton = QtWidgets.QRadioButton(self.AlgorithmGroupBox)
        self.legacyAlgoRadioButton.setGeometry(QtCore.QRect(10, 80, 251, 41))
        self.legacyAlgoRadioButton.setObjectName("legacyAlgoRadioButton")
        self.StadardAlgoRadioButton = QtWidgets.QRadioButton(self.AlgorithmGroupBox)
        self.StadardAlgoRadioButton.setGeometry(QtCore.QRect(10, 40, 171, 31))
        self.StadardAlgoRadioButton.setObjectName("StadardAlgoRadioButton")
        self.PythonNLPRadioButton = QtWidgets.QRadioButton(self.AlgorithmGroupBox)
        self.PythonNLPRadioButton.setEnabled(True)
        self.PythonNLPRadioButton.setGeometry(QtCore.QRect(10, 130, 241, 31))
        self.PythonNLPRadioButton.setObjectName("PythonNLPRadioButton")
        self.AnalyzeButton = QtWidgets.QPushButton(self.AlgorithmGroupBox)
        self.AnalyzeButton.setEnabled(False)
        self.AnalyzeButton.setGeometry(QtCore.QRect(10, 190, 261, 28))
        self.AnalyzeButton.setObjectName("AnalyzeButton")
        self.InputBTextEdit.raise_()
        self.ProgramLabel.raise_()
        self.InputATextEdit.raise_()
        self.Line.raise_()
        self.InputALabel.raise_()
        self.InputBLabel.raise_()
        self.AlgorithmGroupBox.raise_()
        MainWindow.setCentralWidget(self.CentralWidget)
        self.StatusBar = QtWidgets.QStatusBar(MainWindow)
        self.StatusBar.setObjectName("StatusBar")
        MainWindow.setStatusBar(self.StatusBar)
        self.MenuBar = QtWidgets.QMenuBar(MainWindow)
        self.MenuBar.setGeometry(QtCore.QRect(0, 0, 1009, 29))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.MenuBar.setFont(font)
        self.MenuBar.setObjectName("MenuBar")
        self.InfoRibbonButton = QtWidgets.QMenu(self.MenuBar)
        self.InfoRibbonButton.setObjectName("InfoRibbonButton")
        self.menuHelp = QtWidgets.QMenu(self.MenuBar)
        self.menuHelp.setObjectName("menuHelp")
        MainWindow.setMenuBar(self.MenuBar)
        self.actionHelp = QtWidgets.QAction(MainWindow)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.actionHelp.setFont(font)
        self.actionHelp.setObjectName("actionHelp")
        self.actionGitHub = QtWidgets.QAction(MainWindow)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.actionGitHub.setFont(font)
        self.actionGitHub.setObjectName("actionGitHub")
        self.actionDocumentation = QtWidgets.QAction(MainWindow)
        self.actionDocumentation.setObjectName("actionDocumentation")
        self.actionHelp_2 = QtWidgets.QAction(MainWindow)
        self.actionHelp_2.setObjectName("actionHelp_2")
        self.actionGithubPage = QtWidgets.QAction(MainWindow)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.actionGithubPage.setFont(font)
        self.actionGithubPage.setObjectName("actionGithubPage")
        self.actionProgramVersion = QtWidgets.QAction(MainWindow)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.actionProgramVersion.setFont(font)
        self.actionProgramVersion.setObjectName("actionProgramVersion")
        self.actionDocumentation_2 = QtWidgets.QAction(MainWindow)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.actionDocumentation_2.setFont(font)
        self.actionDocumentation_2.setObjectName("actionDocumentation_2")
        self.InfoRibbonButton.addAction(self.actionGithubPage)
        self.InfoRibbonButton.addAction(self.actionProgramVersion)
        self.menuHelp.addAction(self.actionDocumentation_2)
        self.MenuBar.addAction(self.InfoRibbonButton.menuAction())
        self.MenuBar.addAction(self.menuHelp.menuAction())
        # ACTION LISTENERS
            # ribbon
        self.actionHelp.triggered.connect(self.updateAnalyzeButton)
        self.actionGitHub.triggered.connect(self.updateAnalyzeButton)
            # main page
        self.InputATextEdit.textChanged.connect(self.updateAnalyzeButton)
        self.InputBTextEdit.textChanged.connect(self.updateAnalyzeButton)
        self.legacyAlgoRadioButton.toggled.connect(self.updateAnalyzeButton)
        self.PythonNLPRadioButton.toggled.connect(self.updateAnalyzeButton)
        self.StadardAlgoRadioButton.toggled.connect(self.updateAnalyzeButton)
        self.AnalyzeButton.clicked.connect(self.analyzeInputs)
        # END OF ACTION LISTENERS
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "CodeCheck 2.0"))
        self.ProgramLabel.setText(_translate("MainWindow", "CodeCheck 2.0"))
        self.InputALabel.setText(_translate("MainWindow", "Input A:"))
        self.InputBLabel.setText(_translate("MainWindow", "Input B:"))
        self.AlgorithmGroupBox.setTitle(_translate("MainWindow", "Algorithm Options:"))
        self.legacyAlgoRadioButton.setText(_translate("MainWindow", "CodeCheck 1.0 (Legacy)"))
        self.StadardAlgoRadioButton.setText(_translate("MainWindow", "CodeCheck 2.0"))
        self.PythonNLPRadioButton.setText(_translate("MainWindow", "spaCy (AI Model)"))
        self.AnalyzeButton.setText(_translate("MainWindow", "Analyze"))
        self.InfoRibbonButton.setTitle(_translate("MainWindow", "Info"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.actionHelp.setText(_translate("MainWindow", "Version"))
        self.actionGitHub.setText(_translate("MainWindow", "GitHub"))
        self.actionDocumentation.setText(_translate("MainWindow", "Documentation"))
        self.actionHelp_2.setText(_translate("MainWindow", "Help"))
        self.actionGithubPage.setText(_translate("MainWindow", "Github Page"))
        self.actionProgramVersion.setText(_translate("MainWindow", "Version"))
        self.actionDocumentation_2.setText(_translate("MainWindow", "Documentation"))



    def analyzeInputs(self):
        print("InputA: ",self.InputATextEdit.toPlainText())
        print("InputB: ",self.InputBTextEdit.toPlainText())
        if(self.legacyAlgoRadioButton.isChecked()):
            print("Algorithm: ","CodeCheck Legacy")
        if(self.StadardAlgoRadioButton.isChecked()):
            print("Algorithm: ","CodeCheck 2.0")
        if(self.PythonNLPRadioButton.isChecked()):
            print("Algorithm: ","Other")   

        MainWindow.close()
        # new GUI

    # action listener endpoint to process UX "analyze" button
    def updateAnalyzeButton(self):
        if(self.InputATextEdit.toPlainText() and self.InputBTextEdit.toPlainText()
           and (self.legacyAlgoRadioButton.isChecked() or self.PythonNLPRadioButton.isChecked()
           or self.StadardAlgoRadioButton.isChecked())):
            self.AnalyzeButton.setEnabled(True)
        else:    
            self.AnalyzeButton.setEnabled(False)
#####################################################

if __name__ == "__main__":
    app = QApplication(sys.argv)
    MainWindow = QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())